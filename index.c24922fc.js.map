{"mappings":"AAGA,IAAmBA,KAFP,CAAC,EAAG,EAAG,EAAG,EAAG,IAGlB,IAAIC,SAAQ,CAACC,EAASC,KACrBH,GAAOA,EAAII,OAAS,EAEpBF,EADWF,EAAIK,QAAO,CAACC,EAAKC,IAASD,EAAMC,GAAM,IAGjDJ,EAAO,QAAQ,KAMlBK,MAAMC,IACPC,QAAQC,IAAI,gBAAgBF,IAAM,IACnCG,OAAM,KACLF,QAAQC,IAAI,QAAQ","sources":["src/js/03-repeat.js"],"sourcesContent":["// Підрахунок суми елементів масиву: Напишіть функцію, яка приймає масив чисел і повертає проміс, який вирішується сумою всіх елементів масиву. Можна використати метод масиву reduce() для підрахунку суми.\nconst arr = [1, 2, 3, 4, 10];\n\nfunction summOfArr(arr) {\nreturn new Promise((resolve, reject) => {\n    if (arr && arr.length > 0) {\n       const sum = arr.reduce((acc, item) => acc + item, 0);\n        resolve(sum);\n    } else {\n        reject('Error')\n    }\n})\n}\n \nsummOfArr(arr)\n    .then((sum) => {\n    console.log(`final sum is ${sum}`);\n}).catch(() => {\n    console.log('sorry');\n})\n\n\n// Пошук максимального елемента в масиві: Напишіть функцію, яка приймає масив чисел та повертає проміс, який вирішується максимальним числом у масиві.\n\n// Фільтрація масиву: Напишіть функцію, яка приймає масив чисел та значення, і повертає проміс, який вирішується новим масивом, який містить лише числа з початкового масиву, більші за задане значення.\n\n// Обчислення середнього арифметичного: Напишіть функцію, яка приймає масив чисел та повертає проміс, який вирішується середнім арифметичним чисел у масиві.\n\n// Пошук унікальних елементів: Напишіть функцію, яка приймає масив чисел та повертає проміс, який вирішується новим масивом, який містить лише унікальні елементи з початкового масиву (без повторень).\n\n// Знаходження суми додатних чисел: Напишіть функцію, яка приймає масив чисел та повертає проміс, який вирішується сумою всіх додатних чисел у масиві.\n\n// Автентифікація користувача за допомогою форми: Напишіть функцію, яка приймає дані з форми автентифікації(наприклад, ім'я користувача та пароль) і повертає проміс, який вирішується, якщо користувач успішно автентифікований, або відхиляється, якщо автентифікація не вдалася.\n\n// Збереження даних локально: Напишіть функцію, яка приймає дані та зберігає їх локально на пристрої користувача (наприклад, використовуючи localStorage). Поверніть проміс, який вирішується, коли дані успішно збережено."],"names":["arr1","Promise","resolve","reject","length","reduce","acc","item","then","sum","console","log","catch"],"version":3,"file":"index.c24922fc.js.map"}