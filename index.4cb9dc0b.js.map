{"mappings":"YAyFA,IAGcA,EAHRC,EAAWC,SAASC,cAAc,SAGpCC,GAFQF,SAASC,cAAc,UAE2B,QAAhDH,EAAAK,KAAKC,MAAMC,aAAaC,QAAQ,wBAAgB,IAAhDR,IAAoD,IAGlEC,EAASQ,iBAAiB,UAE1B,SAAsBC,GAClBA,EAAIC,iBAEJ,IAAMC,EAAM,CACRC,KAAMZ,EAASa,SAASC,KAAKC,MAC7BC,IAAKhB,EAASa,SAASI,IAAIF,OAG/BZ,EAAQe,KAAKP,GACbX,EAASa,SAASC,KAAKC,MAAQ,GAC/Bf,EAASa,SAASI,IAAIF,MAAQ,GAE9BT,aAAaa,QAAQ,eAAgBf,KAAKgB,UAAUjB,IAW7C,IAAIkB,SAAQ,SAACC,EAASC,GACvBC,YAAW,WACHrB,EACNmB,IAEMC,EAAO,+B,GAElB,I,IAhBaE,MAAK,WACrBC,QAAQC,IAAI,qBAAqCC,OAAhBjB,EAAIC,KAAK,SAAegB,OAARjB,EAAIK,K,IACtDa,OAAM,SAACC,GACNJ,QAAQC,IAAI,SAAUG,E","sources":["src/js/03-repeat.js"],"sourcesContent":["// Підрахунок суми елементів масиву: Напишіть функцію, яка приймає масив чисел і повертає проміс, який вирішується сумою всіх елементів масиву. Можна використати метод масиву reduce() для підрахунку суми.\n// const arr = [1, 2, 3, 4, 10];\n\n// function summOfArr(arr) {\n// return new Promise((resolve, reject) => {\n//     if (arr && arr.length > 0) {\n//        const sum = arr.reduce((acc, item) => acc + item, 0);\n//         resolve(sum);\n//     } else {\n//         reject('Error')\n//     }\n// })\n// }\n \n// summOfArr(arr)\n//     .then((sum) => {\n//     console.log(`final sum is ${sum}`);\n// }).catch(() => {\n//     console.log('sorry');\n// })\n\n\n\n\n// Пошук максимального елемента в масиві: Напишіть функцію, яка приймає масив чисел та повертає проміс, який вирішується максимальним числом у масиві.\n\n// const arr = [1, 5, 3, 4];\n\n// function createPromise(arr) {\n//     return new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (arr && arr.length > 0) {\n//                 const maxNumber = Math.max(...arr)\n//                 resolve (maxNumber)\n//             } else {\n//  reject('no result');\n//             }\n//         }, 500)\n//     })\n// }\n// createPromise(arr).then((data) => {\n//     console.log(data);\n// }).catch((err) => {\n//     console.log('Error:', err);\n// })\n\n\n\n\n\n\n\n\n// Фільтрація масиву: Напишіть функцію, яка приймає масив чисел та значення, і повертає проміс, який вирішується новим масивом,\n// який містить лише числа з початкового масиву, більші за задане значення.\n\n// const arr = [1, 2, 5, 7, 45, 11]\n// let newArr = []\n\n// function createPromise(arr, x) {\n//   return new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (arr && arr.length > 0) {\n//                 const newArr = arr.filter(item => item > x);\n//                 resolve(newArr);\n//             } else {\n//                 reject('Array is empty or undefined');\n//             }\n//         }, 500);\n//     });\n// }\n\n// createPromise(arr, 5)\n//     .then(result => {\n//         console.log(result);\n//     }).catch(error => {\n//         console.error('Error:', error);\n//     });\n\n\n\n\n\n\n\n\n\n// Автентифікація користувача за допомогою форми: Напишіть функцію, яка приймає дані з форми автентифікації(наприклад, ім'я користувача та пароль) та зберігає їх локально на пристрої користувача (наприклад, використовуючи localStorage). Поверніть проміс, який вирішується, коли дані успішно збережено.\n\nconst formItem = document.querySelector('.form');\nconst btn = document.querySelector('button');\n\nlet dataObj = JSON.parse(localStorage.getItem('objectInform')) ?? []\n\n\nformItem.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n  \n    const obj = {\n        name: formItem.elements.Name.value,\n        age: formItem.elements.Age.value\n    };\n\n    dataObj.push(obj)\n    formItem.elements.Name.value = '';\n    formItem.elements.Age.value = '';\n\n    localStorage.setItem('objectInform', JSON.stringify(dataObj));\n\n    createPromise().then(() => {\n    console.log(`localeStorage has ${obj.name} and ${obj.age}`);\n}).catch((error) => {\n    console.log('Error:', error);\n})\n\n}\n\nfunction createPromise() {\n    return new Promise((resolve, reject) => {\n          setTimeout(() => {\n              if (dataObj) {\n            resolve()\n              } else {\n                  reject('Error: Data is not available')\n        }\n    }, 500)\n    })\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$13f67e4cc295f079$var$ref","$13f67e4cc295f079$var$formItem","document","querySelector","$13f67e4cc295f079$var$dataObj","JSON","parse","localStorage","getItem","addEventListener","evt","preventDefault","obj","name","elements","Name","value","age","Age","push","setItem","stringify","Promise","resolve","reject","setTimeout","then","console","log","concat","catch","error"],"version":3,"file":"index.4cb9dc0b.js.map"}